# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    space_access_key: '%env(SPACE_ACCESS_KEY)%'
    space_secret_key: '%env(SPACE_SECRET_KEY)%'
    space_name: '%env(SPACE_NAME)%'
    space_region: '%env(SPACE_REGION)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $uploadsPath: '%kernel.project_dir%/public/uploads'
            $siteFromEmail: 'noreply@futureforward.org'
            $pusherAppId: '%env(PUSHER_APP_ID)%'
            $pusherAppKey: '%env(PUSHER_APP_KEY)%'
            $pusherAppSecret: '%env(PUSHER_APP_SECRET)%'
            $baseUrl: '%env(BASE_URL)%'
            $googleApiKey: '%env(GOOGLE_API_KEY)%'
            $baseHost: '%env(BASE_HOST)%'
            $baseScheme: '%env(BASE_SCHEME)%'
            $env: '%env(APP_ENV)%'
            $cacheDirectory: '%kernel.cache_dir%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\EntityListener\ChatListener:
      tags:
        - { name: doctrine.orm.entity_listener }

    App\Service\FileUploader:
        public: false

    app.file_uploader:
        alias: App\Service\UploaderHelper
        public: true

    app.image_cache_generator:
      alias: App\Service\ImageCacheGenerator
      public: true

    App\Service\ImageCacheGenerator:
        arguments:
          - "@liip_imagine.cache.manager"
          - "@liip_imagine.data.manager"
          - "@liip_imagine.filter.manager"
          - "@liip_imagine.filter.configuration"
          - "@logger"

    App\DataFixtures\Faker\Provider\FixtureHelper:
        tags: [ { name: nelmio_alice.faker.provider } ]
        arguments:
          - "@app.file_uploader"
          - "@app.image_cache_generator"
          - "@doctrine.orm.entity_manager"

    App\EventListener\RequestListener:
        tags:
          - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }
